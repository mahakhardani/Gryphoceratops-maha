(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[883],{1707:function(e,t,n){"use strict";var i=n(5893),o=n(9659),s=n(7023).Z.get("CURRENT_WORKING_DIRECTORY");t.Z=function(e){var t=e.path,n=e.children;return(0,i.jsx)(o.Z,{href:"vscode://file/".concat(s,"/").concat(t),children:n})}},5736:function(e,t,n){"use strict";var i=n(5893);t.Z=function(e){var t=e.name,n=e.title,o=e.subtitle,s=e.children,a=e.className;return(0,i.jsxs)("section",{datacy:t,className:a,children:[(0,i.jsxs)("header",{children:[(0,i.jsx)("h2",{children:n}),o&&(0,i.jsx)("h3",{children:o})]}),(0,i.jsx)("article",{children:s})]})}},6344:function(e,t,n){"use strict";n.r(t),n.d(t,{default:function(){return g}});var i=n(5893),o=n(1707),s=function(){return(0,i.jsxs)("div",{children:["Edit"," ",(0,i.jsx)(o.Z,{path:"src/components/AppointmentForm.tsx",children:'"src/components/AppointmentForm.tsx"'})," ","to implement Appointment form feature."]})},a=function(){return(0,i.jsxs)("div",{children:["Edit",(0,i.jsx)(o.Z,{path:"src/components/AppointmentList.tsx",children:'"src/components/AppointmentForm.tsx"'})," ","to display the list of appointments."]})},r=n(5736),c=n(6265),l=n(7294),p=n(8234),h=n(743),d=n(1201),m=n(7903),u=n(4566),f=n(9805);function x(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function j(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?x(Object(n),!0).forEach((function(t){(0,c.Z)(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):x(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}var b=function(e){var t=e.tasks,n=e.name,o=e.title,s=e.onChange,a=e.onComplete,r=e.expected,x=void 0===r?e.tasks.length:r,b=(0,l.useState)({}),v=b[0],y=b[1];(0,l.useEffect)((function(){var e=localStorage.getItem(n);e?y(JSON.parse(e)):localStorage.setItem(n,JSON.stringify({}))}),[]),(0,l.useEffect)((function(){localStorage.setItem(n,JSON.stringify(v)),null===s||void 0===s||s()}),[v]);var g=(0,l.useMemo)((function(){return Object.keys(v).filter((function(e){return!0===v[e]})).length}),[v]),k=(0,l.useMemo)((function(){return g>=x}),[g,x]);return(0,l.useEffect)((function(){null===a||void 0===a||a(k)}),[k]),(0,i.jsxs)(p.Z,{datacy:n,children:[(0,i.jsx)(h.Z,{expandIcon:(0,i.jsx)(u.Z,{}),children:(0,i.jsxs)("h3",{children:[o," ",(0,i.jsxs)("span",{children:[g,"/",x]})," ",k&&(0,i.jsx)(f.Z,{})]})}),(0,i.jsx)(d.Z,{children:(0,i.jsx)("ul",{children:t.map((function(e,t){var o="".concat(n,"-").concat(t),s=!(null===v||void 0===v||!v[o]);return(0,i.jsxs)("li",{children:[(0,i.jsx)(m.Z,{id:o,name:o,checked:s,onChange:function(){y((function(e){return j(j({},e),{},(0,c.Z)({},o,!s))}))},color:"primary"}),(0,i.jsx)("label",{htmlFor:o,children:e})]},t)}))})})]})},v=function(e){var t=e.className,n=(0,l.useState)(!1),o=n[0],s=n[1],a=(0,l.useState)(!1),r=a[0],c=a[1],p=(0,l.useState)(!1),h=p[0],d=p[1],m=(0,l.useState)(!1),u=m[0],f=m[1],x=(0,l.useState)(!1),j=x[0],v=x[1];return(0,i.jsxs)("div",{className:t,children:[(0,i.jsx)(b,{title:"Tasks generation availabilities (Backend)",tasks:["Implement a service to generate availabilities for a practitioner","In the class ProAvailibilityServiceTest, there is some use cases of handling availabilities, you can check your implementation by running the tests."],name:"tasks-back-availabilities",onComplete:s}),(0,i.jsx)(b,{title:"Tasks for POST appointment endpoint (Backend)",tasks:["Add end-point to create an appointment"],name:"tasks-back-post",onComplete:c}),(0,i.jsx)(b,{title:"Tasks for Appointment Form (Frontend)",tasks:["Show the list of practitioners and select one of them","Show the list of patients and select one of them","Show the availabities of the selected practitioner","Choose the date and the time depending of the selected practitioner's availabities","Validate and submit the form"],name:"tasks-front-form",onComplete:d}),(0,i.jsx)(b,{title:"Tasks for Appointment List (Frontend)",tasks:["Show the list of all appointments with all mandatory informations","Show practitioner name for each appointment","Update dynamically the list"],name:"tasks-front-list",onComplete:f}),(0,i.jsx)(b,{title:"Bonus tasks",tasks:["\ud83e\udd16 Cypress: implement end to end test to assess that the app works as expected","\ud83e\udd16 Add DTO pattern","\u270f\ufe0f Add more backend unit test (on newly implementend routes for exemple)","\u270f\ufe0f CRUD: enable CRUD operations on the appointment entity","\u2699\ufe0f Redux slice Generator: build a tool that automaticly generates redux slices including reducers/actions/selectors","\u2728 Integration: make it shine","\ud83d\udd0e Search: enable search on appointment, practitioner or patient. The solution can either be front-end only or a mix of front-end and back-end","\ud83c\udf89 Something else that we didn't think of"],expected:2,name:"tasks-bonus",onComplete:v}),o&&r&&h&&u&&j&&(0,i.jsx)("p",{children:"You finished the test, congratulation ! Before sending your project, make sure that everything works well and that your code is clean."})]})},y=function(){return(0,i.jsxs)("div",{className:"appointment page",children:[(0,i.jsx)("h1",{children:"Appointments"}),(0,i.jsxs)(r.Z,{name:"instructions",title:"Instructions",className:"instructions",children:[(0,i.jsx)("p",{children:"To book an appointment, we have to set the following required informations: the practitioner, the patient and date."}),(0,i.jsx)("p",{children:"In first you have to create the appointment form. You are free to use the validation form that you want like Formik or React-hook-form."}),(0,i.jsx)("p",{children:"In the second time, you will show the list of all created appointments on the right side"}),(0,i.jsx)("p",{children:"We don't have mock ups, you have to design your own solution and propose a simple workflow for users. It also should be responsive."}),(0,i.jsx)("p",{children:"We expect you to implement two bonus features: you can choose among the suggested features in the bonus section or choose to implement one of your choice."}),(0,i.jsx)("p",{children:"While selecting a practitioner in the dropdown list, the availabilities must be generated and displayed in the front. To create an appointment, you must select an availability and click on the button \u201ccreate appointment\u201d. An endpoint must be created in the back to create the appointment"}),(0,i.jsx)("p",{children:"Every practitioner has many time slots which represent his interval of work time. The duration of an availability for an appointment is 15 minutes, so for example if the practitioner has a one hour time slot, this will generate 4 availabilities of 15 minutes. If the practitioner add an appointment to his agenda that will reduce his availabilities."}),(0,i.jsx)("p",{children:"In the class ProAvailibilityServiceTest, there is some use cases of handling availabilities, you can check your implementation by running the tests."})]}),(0,i.jsx)(v,{className:"goals"}),(0,i.jsxs)("div",{className:"structurePage",children:[(0,i.jsx)(r.Z,{name:"appointment-form",title:"Appointment Form",className:"appointment__form",children:(0,i.jsx)(s,{})}),(0,i.jsx)(r.Z,{name:"appointment-list",title:"Appointment List",className:"appointment__list",children:(0,i.jsx)(a,{})})]})]})};y.pageTitle="Appointments",y.pageSubtitle="Let's get to work \ud83d\udc69\u200d\ud83d\udcbb";var g=y},4865:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/appointments",function(){return n(6344)}])}},function(e){e.O(0,[809,852,774,888,179],(function(){return t=4865,e(e.s=t);var t}));var t=e.O();_N_E=t}]);